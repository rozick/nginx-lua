user www-data;
worker_processes auto;
pid /run/openresty.pid;
events {
    worker_connections  1024;
}

http {
    #create a global variable
    lua_package_path    "$prefix/?.lua;;";
    lua_shared_dict great_proxies 10m;
    
    include       mime.types;
    default_type  application/octet-stream;	
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    keepalive_timeout  65;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    access_log /var/log/openresty/access.log;
    error_log /var/log/openresty/error.log;

    gzip  on;
    gzip_disable "msie6";

    include ../sites/*;

 server {
    # Listen on port 80.
    listen 80;
    listen [::]:80;
	
    # The server name, which isn't relevant in this case, because we only have one.
    server_name test.localhost;
    # When we try to access this site...
    location / {
	content_by_lua_block {
	ngx.header["Content-Type"] = "text/plain"	
	local header = ngx.req.get_headers()["RedirectURL"]
	local sites = ngx.shared.great_proxies
	local set_site = sites:set("site", header)
	local res = ngx.location.capture("/proxy")
        local name = ngx.var.arg_name or "Anonymous"
	ngx.say(header)
	ngx.say(res.body)
	}
}
			
 	location /proxy {		

	set_by_lua $target '
	local sites = ngx.shared.great_proxies
	return sites:get("site");
	';
	
	resolver 8.8.8.8;
        proxy_set_header X-RapidAPI-Test: true;
	proxy_pass $target$request_uri;	
	}
}
}
